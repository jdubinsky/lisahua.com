name: 'Terraform'

on:
  push:
    branches:
    - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Copy assets
      run: |
        mkdir infra/build
        mkdir infra/assets
        pushd frontend
        npm install
        npm run prod
        popd
        cp -rp frontend/assets/* infra/assets/
        cp frontend/dist/app.bundle.js infra/
        pushd backend
        npm install
        npx tsc
        popd
        cp backend/build/* infra/build/

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        pushd infra
        terraform init
        popd

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        pushd infra
        terraform fmt -check
        popd

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        pushd infra
        terraform plan
        popd

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        pushd infra
        terraform apply -auto-approve
        popd
